apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox:1.35
          command:
            - /bin/sh
            - -c
            - "until nc -z -v -w30 postgresql-cluster-rw 5432; do echo 'Waiting for database...'; sleep 5; done;"
      
      containers:
        - name: {{ .Values.name }}
          image: nikolinmajmari/{{ .Values.image.name }}:{{ .Values.image.tag }}
          env:
            - name: ODOO_CMD_ARGS
              value: ""
            - name: USER
              valueFrom:
                secretKeyRef:
                  name: postgresql-cluster-odoo  # Secret name
                  key: username    # Key in the secret
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-cluster-odoo  # Secret name
                  key: password    # Key in the secret
            - name: HOST
              value: "postgresql-cluster-rw"
          ports:
            - containerPort: 8069
{{- if not .Values.isProduction }}
          volumeMounts:
            - name: odoo-data
              mountPath: /var/lib/odoo
      volumes:
        - name: odoo-data
          emptyDir: {}  # Creates temporary storage for the pod lifecycle
{{- else }}
          volumeMounts:
            - name: www
              mountPath: /var/lib/odoo/
      volumes:
        - name: www
          persistentVolumeClaim:
            claimName: www-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: www-pvc
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: "standard"  # Minikube's default storage class
  resources:
    requests:
      storage: 1Gi
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.name }}-service
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Values.name }} 
  ports:
    - protocol: TCP
      port: 8069
      targetPort: 8069